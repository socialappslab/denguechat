= render :partial => "shared/flashes"

- content_for :scripts do
  %script
    = render "users_init.js.erb"


.container


  .row{"ng-controller" => "organizationUsersCtrl"}
    .col-md-12
      .panel.panel-default
        .panel-body
          %h1{"ng-if" => "state.loading"}
            %i.fa.fa-refresh.fa-spin
          %p.large-font.bold Filtrar por ciudad
          %form.form-inline
            %select#inlineFormCustomSelect.form-control{"ng-model" => "options.city_id", "ng-options" => "city.id as (city.name) for city in options.cities", "ng-change" => "loadUsers()"}

          %p.large-font.bold Filtrar por comunidad
          %form.form-inline
            %select#inlineFormCustomSelect.form-control{"ng-model" => "options.neighborhood_id", "ng-options" => "n.id as (n.name) for n in options.neighborhoods", "ng-change" => "loadUsers()"}


      .panel.panel-default
        %table.table.table-bordered
          %thead
            %th
              DengueChat ID
            %th
              = I18n.t("activerecord.attributes.user.username")
            %th Oficio
            -# %th
            -#   = I18n.t("views.admin.actions")
          %tr{"ng-repeat" => "membership in memberships"}
            %td {{membership.user_id}}
            %td
              %a{"ng-href" => "{{membership.user.edit_user_path}}"}
                Nombre de usuario: {{membership.user.username}}
                %br
                Email: {{membership.user.email}}
                %br
                Nombre: {{membership.user.full_name}}
            %td
              %form.form-inline
                %select#inlineFormCustomSelect.form-control{"ng-model" => "membership.role", "ng-options" => "u.value as (u.value) for u in options.roles", "ng-change" => "changeRole(membership)"}

              -# %form{"ng-submit" => "changeRole(membership)"}
              -#   .form-inline
              -#     .form-group
              -#       = select_tag :role, options_for_select([ , :selected => membership.role), {}, :class => "form-control"
              -#
              -#       %button{"type" => :submit, :class => "btn btn-success"}
              -#         I18n.t("views.buttons.save")

            -# %td
            -#   = link_to (user.is_blocked ? I18n.t("views.admin.unblock") : I18n.t("views.admin.block") ), block_coordinator_user_path(user), method: "PUT", data: { confirm: I18n.t("views.alerts.confirm")}, :class => "btn btn-xs btn-danger"
