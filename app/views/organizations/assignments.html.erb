

<!-- Modal -->
<div class="modal fade" id="asignar-popup" tabindex="-1" role="dialog" aria-labelledby="modelTitleId" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Asignar Recorridos</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="margin-top:-15px">
                        <span aria-hidden="true">&times;</span>
                    </button>
            </div>
            <div class="modal-body">
                <!-- body-->
                <%= form_tag assignments_post_organizations_url, method: :post, style: "padding: 2rem" do %>
                <div class="form-group">
                    <div class="input-group date" id="datetimepicker">
                        <input type="text" class="form-control" name="date" id="date" required>
                        <span class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <label> La manzana a recorrer</label>
                    <br />
                    <div id="block-title" class="btn btn-primary">AAAAA</div>
                    <hr />
                    <input id="block-data" type="hidden" name="block" /> 
                    <!--<%= select_tag "block", options_from_collection_for_select(@city_blocks, :id, :name), class: "form-control" %>-->
                </div>
                <div class="form-group">
                    <label>Estado</label>
                    <select name="status" id="status" class="form-control">
                        <option value="pendiente">Pendiente</option>
                        <option value="realizado">Realizado</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Actividad a realizar</label>
                    <input type="text" class="form-control" id="task" name="task" required>
                </div>
                <div class="form-group">
                    <label>Voluntarios</label>
                    <input type="text" class="form-control" id="volunteers" name="volunteers" data-role="tagsinput" required>
                </div>
                <div class="form-group">
                    <label>Observaciones</label>
                    <textarea class="form-control" id="notes" name="notes"></textarea>
                </div>
                <input type="hidden" name="assignment_id" id="assignment_id">
                <button class="btn btn-default" type="reset" id="cancelar-asignar" style="display:none">Cancelar</button>
                <button class="btn btn-success" id="editar-asignar" style="display:none">Editar asignación</button>
                <button class="btn btn-success" id="guardar-asignar">Asignar</button>
            <% end %>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="list-popup" tabindex="-1" role="dialog" aria-labelledby="modelTitleId" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Asignaciones</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="margin-top:-15px">
                        <span aria-hidden="true">&times;</span>
                    </button>
            </div>
            <div class="modal-body">
                <!-- body-->
                <table class="assignment-container">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Actividad</th>
                            <th>Fecha</th>
                            <th>Observación</th>
                            <th>Estado</th>
                            <th>Voluntarios</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody class="">
                    </tbody>
                </table>           

                <!-- body-->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
             
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="message-popup" tabindex="-1" role="dialog" aria-labelledby="modelTitleId" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">sm</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
            </div>
            <div class="modal-body">
                <!-- body-->
               <h4> La manzana no cuenta con asignaciones</h4>          

                <!-- body-->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
             
            </div>
        </div>
    </div>
</div>

<div class="container" id="assignments-page">
    <% if flash[:notice] %>
    <div class="alert alert-success alert-dismissable">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <%= flash[:notice] %>
    </div>
    <% end %>
    <% if flash[:error] %>    
    <div class="alert alert-danger alert-dismissable">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <%= flash[:error] %>
    </div>
    <% end %>
    <div class="row">
        <div class="col-md-12">

            <div id= "select_city" class="form-group">
                <label>Seleccione una ciudad</label>
                <%= select_tag "id_city", options_from_collection_for_select(@all_cities, :id, :name, @city.id) ,class: "form-control" ,disabled: false%>    
           </div> 
           <div id= "barrios_select" class="form-group">
                <label>Seleccione el barrio</label>
                <%= select_tag "id_barrio", content_tag(:option,"Seleccione",:value=>"0-0"), class: "form-control"%>
            </div>
            
            <div class="form-group">
                <input type="hidden" id="view_type" value="1" >        
            </div>
        
       </div>
        <div class="col-md-12">
            <div class="panel panel-default" id="citymap">
                <div id="mapid"></div>
            </div>
        </div>
    </div>                          
</div>

<script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js"
    integrity="sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og=="
    crossorigin=""></script>

    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"> </script>

<script>
    $(document).ready(function() {
        $("#datetimepicker").datetimepicker({
            useCurrent: true,
            icons: {
                time: 'fa fa-clock-o',
                date: 'fa fa-calendar',
                up: 'fa fa-chevron-up',
                down: 'fa fa-chevron-down',
                previous: 'fa fa-chevron-left',
                next: 'fa fa-chevron-right',
                today: 'fa fa-screenshot',
                clear: 'fa fa-trash'
            }
        });
    });
</script>
<script>


var idioma_espaniol = {
    "sProcessing":     "Procesando...",
    "sLengthMenu":     "Mostrar _MENU_ registros",
    "sZeroRecords":    "No se encontraron resultados",
    "sEmptyTable":     "Ningún dato disponible en esta tabla",
    "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
    "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
    "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
    "sInfoPostFix":    "",
    "sSearch":         "Buscar:",
    "sUrl":            "",
    "sInfoThousands":  ",",
    "sLoadingRecords": "Cargando...",
    "oPaginate": {
        "sFirst":    "Primero",
        "sLast":     "Último",
        "sNext":     "Siguiente",
        "sPrevious": "Anterior"
    },
    "oAria": {
        "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
    }
    }       

$(document).ready(function() {
    var volunteers = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        prefetch: '<%= volunteers_json_organizations_url(city_id: @city.id, format: :json) %>'
    });
    volunteers.initialize();
    var elt = $('#volunteers');
    elt.tagsinput({
        itemValue: 'id',
        itemText: 'name',
        typeaheadjs: {
            name: 'volunteers',
            displayKey: 'name',
            source: volunteers.ttAdapter()
        }
    });
})
</script>
<script>
$(document).ready(function() {
    $(".edit-assignment").on("click", function() {
        disableFields();
        var assignmentId = parseInt($(this).data("assignment"));
        $.get("/organizations/assignment/"+assignmentId+".json", function(data) {
            emptyFields();
            $("#editar-asignar").show();
            $("#cancelar-asignar").show();
            $("#guardar-asignar").hide();
            $("#assignment_id").val(data.id);
            $("#task").val(data.task);
            $("#block").val(data.city_block_id);
            $("#date").val(moment(data.date).format("DD/MM/YYYY HH:mm"));
            $("#status").val(data.status);
            $("#notes").val(data.notes);
            var elt = $("#volunteers");
            for(var v of data.users) {
                var vname;
                if (v.first_name === '' && v.last_name === '') vname = v.name;
                else vname = v.first_name + " " + v.last_name;
                elt.tagsinput('add', { "id": parseInt(v.id), "name": vname, "picture": null });
            }
            enableFields();
        });
    });

    $("#cancelar-asignar").on("click", function() {
        $("#assignment_id").val("");
        $("#editar-asignar").hide();
        $("#cancelar-asignar").hide();
        $("#guardar-asignar").show();
        $("#volunteers").tagsinput("removeAll");
    });
});

function emptyFields() {
    $("input[name!=authenticity_token], textarea").val("");
    $("#volunteers").tagsinput('removeAll');
    $("#block").val($("#block option:first").val());
    $("#status").val('pendiente');
}

function disableFields() {
    $("input, textarea, select").attr("readonly",true);
}
function enableFields() {
    $("input, textarea, select").attr("readonly",false);
}
</script>

<script>
    $(document).ready(function(){
        $('#id_barrio').change(function() {  
            
            var cuerpo = $("#ultimos_recorrido");
            var obtener_valor  = $(this).val().split("-");
            var id_barrio_nuevo = obtener_valor[0];
            var idciudad = obtener_valor[1];
            if (idciudad == undefined){
                idciudad = $("#id_city").val();
            }
            if(idciudad == 0){
                cuerpo.html("");
            }else{
                $.get("/organizations/assignments/"+idciudad+"/barrio/"+id_barrio_nuevo, function(data) {
                    cuerpo.html("");
                    for (var item of data) {
                        var fila = cuerpo.append("<tr id='"+item.id+"'/>");
                        fila.append("<td>"+item.city_block_name+"</td>");
                        fila.append("<td>"+item.visit_count+"</td>");
                        fila.append("<td>"+moment(item.last_visit_date).format("DD/MM/YYYY")+"</td>"); 
                        
                    }
                });
            }
            
        });
    });
</script>

<% content_for :scripts do %>
<script>

var tabledata;

function abrir_asignar_popup(id, name){

    $("#block-title").html(name)
    $("#block-data").val(id)
    $('#asignar-popup').modal('show');
}


function mostrar_asignaciones_popup(id, name){
    $('#list-popup').modal('show');

    if (tabledata){
        console.log("Tabledata is binded")
    }else{
        tabledata = $(".assignment-container").DataTable({
            "ajax": {
                "url": '/organizations/cityblockassigns/'+id,
                "dataSrc": ""
             },
             "columns": [
                { "data": "id" },
                { "data": "task" },
                {"data":"fecha"},
                { "data": "notes" },
                { "data":  null,
                "render":function(data, type, row, meta) {
                    var remedies = '';
                    
                    if(row.status =="pendiente"){
                        remedies = " <div class='btn btn-warning'>"+row.status+"</div>";
                    }else{
                        if(row.status == "realizado"){
                            remedies = " <div class='btn btn-success'>"+row.status+"</div>";
                        }
                    }
                  
                    return remedies;
 
                }},

                { "data":  null,
                "render":function(data, type, row, meta) {
                    var remedies = '';
                    
                    //loop through all the row details to build output string
                    for (var item in row.users) {
                        var r = row.users[item];
                        remedies = remedies + " <span class='badge'>"+r.name+"</span>" + '</br>';
                    }
                    return remedies;
 
                }},
                
            ],
             "language" : idioma_espaniol
        })
    }
   
    tabledata.ajax.url('/organizations/cityblockassigns/'+id).load()
   
}

function switch_view(view){
    $('#view_type').val(view)
    
}

$(document).ready(function() {
    //load the city options 

    var city =  $('#id_city')
    var neighborhood = $('#id_barrio')
    var view1 = $('#view1')
    var view2 = $('#view2')

    // the map bind with the div, in a specific lat and long
    
    var denguemap = L.map('mapid').setView([-25.320044882648016, -57.64547824859619], 18);
    var blocklayer = null;

    // this map use a OpenStreetMap tiles as the first layer 

    L.tileLayer('https://a.tile.openstreetmap.org/{z}/{x}/{y}.png ', {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 18,

    }).addTo(denguemap);


    function perc2color(a, b) {

        return '#33baff'
        
        if( a == 0  && b==0 ) return '#c2c2c2';
        perc =  a/b;
        perc  =  perc *100;
        var r, g, b = 0;
        if(perc > 50) {
            r = 255;
            g = Math.round(5.1 * perc);
        }
        else {
            g = 255;
            r = Math.round(510 - 5.10 * perc);
        }
        var h = r * 0x10000 + g * 0x100 + b * 0x1;
        return '#' + ('000000' + h.toString(16)).slice(-6);
    }


    function load_neighborhood(data){
        var cuerpo = $("#id_barrio");
        cuerpo.html("");
        var neighborhood = cuerpo.append("<option value='0-0'> Seleccione </option>");
        //clear all options of sneighbor
        for (let i = 0; i < data.length; i++) {
            const element = data[i];
            neighborhood.append("<option value='"+element.id+"'>"+element.name+"</option>")
            
        }
    }

    function load_map_popup(layer,element){
        $.get('/organizations/cityblockinfo/'+element.name,function(data){
            if(element.max_group == null){
                var fecha = "--";
            }else{
              var visit_date = new Date(element.max_group);  
              var fecha = visit_date.toDateString();
            }
            if(data.obj.city_id == 9){
                layer.bindPopup("<h2>ID: "+element.name+"</h2> \
                <div class='row'> \
                    <div class='col-md-6'> \
                        <div class=''> \
                            <h3><i style='font-size:25pt; color:#ff4b72;' class='fa fa-map-marker fa-2'></i><strong> "+data.count_locations+" </strong></h3> \
                            <span>Casas</span> \
                        </div> \
                    </div> \
                    <div class='col-md-6'> \
                        <div class=''> \
                            <h3><i style='font-size:20pt; color:#71b358;' class='fa fa-signal fa-2'></i> <strong>"+data.count_inspection+"</strong> </h3> \
                            <span>Criaderos</span> \
                        </div> \
                    </div> \
                </div> \
                <div class='row'> \
                    <div class='col-md-12'> \
                        <div class=''> \
                            <h3><i style='font-size:20pt; color:#7ea6e6;' class='fa fa-users fa-2'></i> <strong>" +element.count+ " </strong></h3> \
                            <span>Visitas</span> \
                        </div> \
                    </div> \
                </div> \
                <div class='row'>  \
                    <div class='col-md-12'> \
                        <div class=''> \
                           <h3> <i style='font-size:20pt; color:#91d0cb;' class='fa fa-table fa-2'></i> <strong> "+fecha+"</strong> </h3> \
                           <span> Ultima visita</span> \
                        </div> \
                    </div> \
                </div> \
                <button class='btn btn-primary' onclick='abrir_asignar_popup("+data.obj.id+","+data.obj.name+")'>Asignar</button>\
                <button class='btn btn-primary' onclick='mostrar_asignaciones_popup("+data.obj.id+","+data.obj.name+")'>Ver asignaciones</button> ");
                
            }else{

                layer.bindPopup("<h2>ID: "+element.name+"</h2> \
                <div class='row'> \
                    <div class='col-md-6'> \
                        <div class=''> \
                            <h3><i style='font-size:25pt; color:#7ea6e6;' class='fa fa-users fa-2'></i><strong> "+element.count+" </strong></h3> \
                            <span>Visitas</span> \
                        </div> \
                    </div> \
                    <div class='col-md-6'> \
                        <div class=''> \
                            <h3><i style='font-size:20pt; color:#91d0cb;' class='fa fa-table fa-2'></i> <strong>"+fecha+"</strong> </h3> \
                            <span>Ultima visita</span> \
                        </div> \
                    </div> \
                </div> \
                <button class='btn btn-primary' onclick='abrir_asignar_popup("+data.obj.id+","+data.obj.name+")'>Asignar</button>\
                <button class='btn btn-primary' onclick='mostrar_asignaciones_popup("+data.obj.id+","+data.obj.name+")'>Ver asignaciones</button> ");
            }
        })
      
    }

    function load_and_pan_map(){
        neighborhood_id = neighborhood.val();
        $.get('/organizations/neighborhoodlocation/'+neighborhood_id, function(data){
            load_map(neighborhood_id);      
            denguemap.panTo(new L.LatLng(data.latitude, data.longitude));
        })
    }

    function load_polygon(data){
        var type = parseInt($('#view_type').val());
        var fill;
        var max_diff = 0;
        for (let i = 0; i < data.length; i++) {
           const element = data[i];
           if(type ==1 ){

               var date =new Date(element.max)
               var date2 = new Date(element.max_group)    
               if(max_diff < ( date.getTime()-date2.getTime())) {
                   max_diff = date.getTime()-date2.getTime();
               }
           }else{
               if( type ==2 ){
                   
                   if( max_diff < element.count){
                       max_diff = element.count 
                   }
               }
           }        
       }
       

       denguemap.eachLayer(function (layer) {
            if ( layer.myTag &&  layer.myTag === "myGeoJSON") {
                denguemap.removeLayer(layer);
            }
        
        });

       for (let i = 0; i < data.length; i++) {
           const element = data[i];
               
           if ( element.polygon != null) {
      
               blocklayer = L.geoJSON(JSON.parse(element.polygon),
           {

               style: function (feature) {

                   if(type ==  1){
                       var date =new Date(element.max)
                       var date2 = new Date(element.max_group)
                       fill = perc2color(date.getTime()- date2.getTime(),max_diff)
                   }else{
                       if(type == 2){
                           fill = perc2color(element.count,max_diff)
                       }
                   }
                         
                   return {
                       fillColor: fill,
                       weight: 2,
                       opacity: 1,
                       color: 'white',  //Outline color
                       fillOpacity: 0.7
                   };
               },

               onEachFeature:function (feature, layer) {   
                    layer.myTag = "myGeoJSON";

                    layer.bindTooltip(element.name,
                        {permanent: true, direction:"center",className: 'block-tooltip'}, 
                    ).openTooltip()
                       layer.addEventListener('click', function (event) {
                           // If the clicked element doesn't have the right selector, bail
                           // Don't follow the link          
                            load_map_popup(layer,element)       
                           // Log the clicked element in the console
                        }, false);    
               },
            }).addTo(denguemap);
           }
        }
}



    function load_map(id){
        $.get('/organizations/mapcityblock/'+id, load_polygon);
    }

    /**
     * Default Load
     */

    city_id = city.children("option:selected").val();
    
    if(city_id != null){
        $.get('/organizations/assignments/cityselect/'+city_id,load_neighborhood);
    }

    city.change(function(data){
        city_id = $(this).val();
        // load the select with the cities
        // the first option of the data, if it has any options create another get
        $.get('/organizations/assignments/cityselect/'+city_id, load_neighborhood )
    })


    neighborhood.change(load_and_pan_map);

    view1.click(  load_and_pan_map )
    view2.click(  load_and_pan_map)

    //load the first neighborhood of the city_options loaded



    // load the map of the first neighborhood with the first colored map


   
});
 </script>
 <% end %>
    
<% content_for :head do %>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css"
    integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
    crossorigin=""/>

    <link rel="stylesheet" href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css"/>
    <style>
    #mapid { height: 600px; }
    .block-tooltip{
        font-size: 18px;
        padding: 12px;
        background-color: #ffffff00;
        border : 0px solid #fff; 
        border-radius: 71px;
        line-height: 40px;
        color: #000;
        font-weight:bolder;
        box-shadow: 0 0px 0px rgba(0,0,0,0.4);
    }
    
 
</style>

<% end %>




