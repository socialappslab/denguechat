- content_for :scripts do
  :javascript
    $("#complete_name").tooltip();
    var verifiers = #{@verifiers.to_json};
    var residents = #{@residents.to_json};

    $("select#recruitment").change(function()
    {
      if ($("#recruitment").val() == "AVS/ACS")
      {
        // $("input#recruitment").show();
        $("input#recruiter_name").autocomplete(
        {
          source: verifiers,
          select: function(event, ui)
          {
            event.preventDefault();
            $("input#recruiter_name").val(ui.item.label);
            $("input#recruiter_id").val(ui.item.value);
          }
        });
      }
      else if ($("#recruitment").val() == "MORADOR/VIZINHO")
      {
        // $("input#recruitment").show();
        $("input#recruiter_name").autocomplete(
        {
          source: residents,
          select: function(event, ui)
          {
            event.preventDefault();
            $("input#recruiter_name").val(ui.item.label);
            $("input#recruiter_id").val(ui.item.value);
          }
        });
      }
      else
      {
        $("input#recruitment").hide();
      }
    });




    $(document).ready(function()
    {
      if($("#cellphone").prop("checked"))
      {
        // $("#user_phone_number").prop("disabled", true)
        // $("#user_carrier").prop("disabled", true)
        // $("#pre_paid_radio").prop("disabled", true)
        // $("#post_paid_radio").prop("disabled", true)

        $("#user_phone_number").val("000000000000")
        $("#user_carrier").val("xxx")
      }
      else
      {
        // $("#user_phone_number").prop("disabled", false)
        // $("#user_carrier").prop("disabled", false)
        // $("#pre_paid_radio").prop("disabled", false)
        // $("#post_paid_radio").prop("disabled", false)

        // $("#user_phone_number").val("")
        // $("#user_carrier").val("")
      }

      if ($("#user_phone_number").val() == "000000000000" && $("#user_carrier").val() == "xxx")
        $("#cellphone").attr("checked", true)
    });

    $("#cellphone").on("change", function()
    {
      if(this.checked)
      {
        // $("#user_phone_number").prop("disabled", true)
        // $("#user_carrier").prop("disabled", true)
        // $("#pre_paid_radio").prop("disabled", true)
        // $("#post_paid_radio").prop("disabled", true)

        $("#user_phone_number").val("000000000000")
        $("#user_carrier").val("xxx")
      }
      else
      {
        // $("#user_phone_number").prop("disabled", false)
        // $("#user_carrier").prop("disabled", false)
        // $("#pre_paid_radio").prop("disabled", false)
        // $("#post_paid_radio").prop("disabled", false)

        $("#user_phone_number").val("")
        $("#user_carrier").val("")
      }
    });


    window.onload = $("#name_edit_box").slideToggle("fast");
    $(".collapse_name").click(function(event){
      event.preventDefault();
      $("#name_edit_box").slideToggle("fast");
    });



= render :partial => "shared/flashes"

.user_form.offset1
  /%h1 Configurações da conta
  = render :partial => "shared/form_errors", :locals => {:item => @user}

  - if @user == @current_user
    - if @current_user.role == "admin" or @current_user.role == "coordenador"
      #role_specific.offset9
        %h2 Configurações de coordenador
        %p.link
          = link_to "Registrar patrocinador, verificador e visitante", "/users/special_new"
        %p.link
          = link_to "Registrar novos prêmios ", "/premios/new"
        %p.link
          = link_to "Registrar notícias da comunidade", new_notice_path
        %p.link
          = link_to "Administrar usuários", "/users"
        %p.link
          = link_to "Administrar prêmios", "/premios/admin"
        %p.link
          = link_to "Administrar DT Torpedos", "/phones"
        %p.link
          = link_to "Administrar contatos", feedbacks_path
        %p.link
          = link_to "Administrar tipos e métodos", "/reports/types"
    - elsif @current_user.role == "lojista"
      #role_specific.offset9
        %h2 Configurações de patrocinador
        %p.link
          = link_to "Códigos de controle dos prêmios", "/coupons"


  = form_for(@user, :html => {name: "configuration"}, :url => {:action => "update", :house_name_confirmation => @house_name_confirmation, :html => {:autocomplete => "off", :multipart => true}}) do |f|
    - if @user.role != "visitante"
      -##map_div{style: "position:absolute;margin-left:570px;height:500px;width:400px;margin-top:440px;"}
        %h2{style: 'margin-left:10px;font-size:15px;line-height:25px;;line-height:20px;', title: "O mapa pode não encontrar o seu endereço. Nesse caso, mova o marcador clicando na localização correta."}
          %b{style: "color:red;"}
            ATENÇÃO:
          O mapa pode não encontrar o seu endereço. Nesse caso, procure a localização correta e clique manualmente para adicionar o marcador.
        %input{type: "button", value: "Va para Maré", style: "margin-left:296px;margin-bottom:10px;margin-top:-15px;", id: "go_to_mare"}
        - if @user.house
          = hidden_field_tag "x", "", value: @user.house.location.latitude
          = hidden_field_tag "y", "", value: @user.house.location.longitude
        - else
          = hidden_field_tag "x"
          = hidden_field_tag "y"
        #map{style: "width:400px;height:400px;position:relative;"}
          = image_tag "loading.gif", id: "loading", style: "position:absolute;width:50px; height:50px;top:175px;left:175px;z-index:100"
        -# Google Maps Javascript
        :javascript
          var map;

          require(["esri/map", "esri/toolbars/draw", "esri/tasks/locator", "esri/layers/ArcGISTiledMapServiceLayer", "esri/SpatialReference", "esri/geometry/Point", "esri/config", "esri/graphic", "esri/symbols/SimpleMarkerSymbol", "esri/symbols/SimpleLineSymbol", "esri/symbols/TextSymbol", "dojo/_base/Color", "esri/symbols/PictureMarkerSymbol", "esri/renderers/ClassBreaksRenderer", "esri/dijit/PopupTemplate", "dojo/domReady!"], function(Map, Draw, Locator, Tiled, SpatialReference, Point, Geometry, Graphic, SimpleMarkerSymbol, SimpleLineSymbol, TextSymbol, Color, PictureMarkerSymbol, ClassBreaksRenderer, PopupTemplate) {
            var customExtent = new esri.geometry.Extent(667070.412263838,7456962.88258577,688175.480935968,7475960.60361382, new esri.SpatialReference({"wkid":29193}));

            var point = new Point(680291.2151545063, 7471401.29586681, new esri.SpatialReference({wkid: 29193}));

            var picBaseUrl = "http://static.arcgis.com/images/Symbols/Shapes/";
            var gray = new PictureMarkerSymbol(picBaseUrl + "BlackPin1LargeB.png", 48, 64).setOffset(0, 15);
            var blue = new PictureMarkerSymbol(picBaseUrl + "BluePin1LargeB.png", 48, 64).setOffset(0, 15);
            var orange = new PictureMarkerSymbol(picBaseUrl + "OrangePin1LargeB.png", 48, 64).setOffset(0, 15);
            var red = new PictureMarkerSymbol(picBaseUrl + "RedPin1LargeB.png", 48, 64).setOffset(0, 15);

            map = new Map("map", {
              center: point,
              zoom: 5,
              extent: customExtent
            });

            var tiled = new Tiled("http://pgeo2.rio.rj.gov.br/ArcGIS2/rest/services/Basico/mapa_basico_utm/MapServer");
            map.addLayer(tiled);

            $("input#go_to_mare").click(function() {
              map.centerAndZoom(new Point(680291.2151545063, 7471401.29586681, new esri.SpatialReference({"wkid": 29193})), 5);
            });
            function addGraphic(evt) {
              map.graphics.clear();
              map.enableMapNavigation();

              // figure out which symbol to use
              var symbol = new SimpleMarkerSymbol();
              symbol.setStyle("STYLE_PATH");
              symbol.setPath("M 10 10 L30 10 L20 30z");
              symbol.setColor(new Color("red"));

              $("input#x").val(evt.geometry.x);
              $("input#y").val(evt.geometry.y);
              map.graphics.add(new Graphic(evt.geometry, red));
              map.centerAt(evt.mapPoint);

            }
            function showLoading() {
              $("#loading").show();
              map.disableMapNavigation();
              map.hideZoomSlider();
            }

            function hideLoading() {
              $("#loading").hide();
              map.enableMapNavigation();
              map.showZoomSlider();
            }

            map.on("update-start", showLoading);
            map.on("update-end", hideLoading);

            map.on("load", function() {
              tb = new Draw(map);
              tb.on("draw-end", addGraphic);
              tb.activate("point");
              map.graphics.add(new Graphic(new Point(#{@user.house.location.latitude}, #{@user.house.location.longitude}), red));

            });

            $("#user_location_street_number").change(function() {
              $.ajax({
                url: "http://pgeo2.rio.rj.gov.br/ArcGIS2/rest/services/Geocode/DBO.Loc_composto/GeocodeServer/findAddressCandidates",
                type: "GET",
                dataType: "jsonp",
                data: {"f": "pjson", "Street": $("#user_location_street_type").val() + " " + $("#user_location_street_name").val() + " " + $("#user_location_street_number").val()},
                success: function(m) {
                  map.graphics.clear();
                  var candidates = m.candidates;
                  if (candidates.length > 0) {
                    var symbol = new SimpleMarkerSymbol();
                    symbol.setStyle("STYLE_PATH");
                    symbol.setPath("M 10 10 L30 10 L20 30z");
                    symbol.setColor(new Color("red"));
                    map.graphics.add(new Graphic(new Point(candidates[0].location.x, candidates[0].location.y), red));
                    $("input#x").val(candidates[0].location.x);
                    $("input#y").val(candidates[0].location.y);

                    map.centerAndZoom(new Point(candidates[0].location.x, candidates[0].location.y, new esri.SpatialReference({"wkid": 29193})), 5);
                  }
                },
                error: function(m) {
                  console.log(JSON.stringify(m));
                }
              });
            });

          });


    - if @user.role == "coordenador"
      - if @user.gender == true
        %h1{id: "role_title"} Configurações de coordenador
      - else
        %h1{id: "role_title"} Configurações de coordenadora
    - elsif @user.role == "verificador"
      - if @user.gender == true
        %h1{id: "role_title"} Configurações de verificador
      - else
        %h1{id: "role_title"} Configurações de verificadora
    - elsif @user.role == "lojista"
      %h1{id: "role_title"} Configurações de patrocinador
    - elsif @user.role == "visitante"
      %h1{id: "role_title"} Configurações de visitante
    - elsif @user.role == "admin"
      %h1{id: "role_title"} Configurações de administrador
    - else
      - if @user.gender == true
        %h1{id: "role_title"} Configurações de morador
      - else
        %h1{id: "role_title"} Configurações de moradora



    .indent#house_configuration
      #name_display
        %br
        .question_mark_div
          = f.label "Nome completo", class:"config_form_title"
          %span.question_mark{class:"config_form_title question_mark", title:"O Nome Completo é utilizado para realizar o resgate do prêmio nos estabelecimentos patrocinadores. É importante informar o nome correto para evitar problemas no momento do resgate dos prêmios. Em caso de dúvida leia nossa Política de Privacidade e a página de Perguntas Frequentes. "} ?

        %h2#user_name #{@user.full_name}
        =link_to "Editar","",class:"collapse_name"
      .indent
        #name_edit_box

          = f.text_field :first_name, :placeholder => "* Nome"
          %br

          = f.text_field :last_name, :placeholder => "* Sobrenome"
          %br

          = f.text_field :nickname, :placeholder => "Apelido (opcional)"
          %br
          = f.label "Mostrar nome como"

          =f.select :display, options_for_select(@user.display_name_options, @user.display),{:name => "display", :id => "display_select"}
          %br
          %br
          = f.submit I18n.t("views.button.confirm"), {:style => "margin-bottom: 20px;", :class => "btn btn-success"}


      = f.radio_button :gender, "true", :checked => (@user.gender == true)
      masculino
      = f.radio_button :gender, "false", :checked => (@user.gender == false)
      feminino



      %br
      %br
      %br
      /= f.label :phone_number, "* Celular"
      = f.label "E-mail", class:"config_form_title"
      = f.text_field :email, :placeholder => "* Email"
      %br
      %br
      = f.label "Celular", class:"config_form_title"

      #cellphone-information
        = f.text_field :phone_number, :placeholder => "0219xxxxxxxx"
        = f.text_field :carrier, :placeholder => "Operadora"
        = f.radio_button :prepaid, "true", id:"pre_paid_radio", checked: "checked"
        Pré-pago
        = f.radio_button :prepaid, "false", id:"post_paid_radio"
        Pós-pago


      = check_box_tag :cellphone, false
      Clique aqui se você não tiver um celular.

      %br
      %br

      = f.label :profile_photo,  "Foto do perfil (opcional)", class:"config_form_title"
      = f.file_field :profile_photo

      %br
      %br
      = link_to "Alterar minha senha", edit_password_reset_path(@user), :id => "reset_password_link",id:'password_reset'
      %br
      %br

    -# House Settings / Configurações da casa
    %br
    %br
    %br
    - if @user.role != "visitante"
      - if @user.role == "lojista"
        %h1 Configurações da estabelecimento
      - else
        %h1 Configurações da casa

      .indent

        -# Name of home / Nome da casa
        %br
        = f.fields_for :house, (@user.house || House.new) do |house_form|
          - if @user.role == "lojista"
            = house_form.label "Nome do estabelecimento"
            = house_form.text_field :name
          - elsif @user.role == "verificador"
            = house_form.label "Nome do organização"
            = house_form.text_field :name
          - else
            = house_form.label "Nome da casa (máximo 16 caracteres)", class:"config_form_title"
            = house_form.text_field :name, :placeholder => "ex. Maria Santos ou Maria e Paulo", :maxlength => 16
        %br
        %br

        -# Neighborhood / Bairro
        .question_mark_div
          = f.label "Bairro",class:"config_form_title"
        / TODO: We're disabling choosing other neighborhoods until we introduce
        / another neighborhood
        /= f.select(:neighborhood_id, Neighborhood.all.map {|n| [n.name, n.id]})
        - mare = Neighborhood.find_by_name("Maré")
        = f.select(:neighborhood_id, [ [mare.name, mare.id] ])
        %br
        %br

        -#Photo of house / Foto de casa
        = f.fields_for :house, (@user.house || House.new) do |house_form|
          - if @user.role == "lojista"
            = house_form.label "Telefone comercial"
            = house_form.text_field :phone_number
            = house_form.label "Logo digital (opcional)"
          - elsif @user.role == "verificador"
            = house_form.label "Fodo do organização"
          - else
            = house_form.label "Foto da casa (opcional)", class:"config_form_title"
          = house_form.file_field :profile_photo

          %br
          %br
          = house_form.fields_for :location, (@user.house || House.new).location || Location.new do |location_form|
            = location_form.label "Endereço (opcional)", class:"config_form_title"
            =#/ # = location_form.text_field :address, value: @user.location.address, placeholder: "Endereço da casa", title: "No caso de rua de número, escreva o endereço por extenso. Ex: Rua Dois, Travessa Quatorze." if @user.location

            = location_form.text_field :street_type,  placeholder: "Rua, Beco etc.", class: "short_field"
            = location_form.text_field :street_name, placeholder: "Nome", title: "No caso de rua de número, escreva o endereço por extenso. Ex: Rua Dois, Travessa Quatorze."
            = location_form.text_field :street_number, placeholder: "Número", class: "middle_field"

        %br


      %br
      %br
      %br
      - unless @user.is_fully_registered
        %h1 Alguém o convidou a se cadastrar no DT?
        %select#recruitment{:name => "recruitment_type"}
          %option NINGUÉM
          %option AVS/ACS
          %option MORADOR/VIZINHO
        %br
          %input{:id => "recruiter_name", :name => "recruiter_name"}
          %input{:type => "hidden", :name => "recruiter_id", :id => "recruiter_id"}
    - else
      %h2 Apresentação pessoal
      .indent#visitor_desc
        = text_area_tag "bio", nil, rows: 10, placeholder: "Descreva suas informações pessoais e profissionais."

    %br
      .edit_house
        = f.submit I18n.t("views.button.confirm"), {:style => "margin-bottom: 20px;", :class => "btn btn-success"}
