- content_for :dashboard_content do
  .table-header-view

    .row
      .col-md-6

        = form_tag set_cookies_users_path, :method => "POST", :class => "form-inline" do
          .form-group
            %p.form-control-static
              = I18n.t("attributes.neighborhood_id")
          .form-group
            = select_tag "neighborhood_id", options_for_select(@neighborhoods_select, :selected => @neighborhood.id),  :class => "form-control"
          = submit_tag I18n.t("views.buttons.submit"), :class => "btn btn-success"

      .col-md-6
        .pull-right
          = render :partial => "shared/pagination"


  .input-group.input-group-lg
    %span.input-group-addon
      .fa.fa-search
    %input#search-filter.form-control{:type => "text"}/


  .row
    .col-md-12
      %table.table.table-bordered.table-hover.text-center.statistics-table
        %thead
          %th.text-center
            CSV
          %th.text-center
            = I18n.t("attributes.location_id")
          %th.text-center
            = I18n.t("activerecord.attributes.user.username")
          %th.text-center
            = I18n.t("activerecord.attributes.visit.visited_at")
          %th.text-center
            = I18n.t("activerecord.attributes.visit.health_report")
          %th.text-center
            = I18n.t("activerecord.attributes.report.breeding_site_id")
          %th.text-center
            = I18n.t("activerecord.attributes.report.protected")
          %th.text-center
            = I18n.t("activerecord.attributes.report.larvae")
          %th.text-center
            = I18n.t("activerecord.attributes.report.pupae")
          %th.text-center
            = I18n.t("activerecord.attributes.report.chemically_treated")
        %tbody
          - @csvs.each do |csv|
            %tr{:data => {"csv_id" => csv.id}}
              // NOTE: rowspan should always be +1 since it's counting its own
              // tr as well.
              - visits = csv.visits.order("visited_at ASC").includes(:inspections)
              - visits_row_span = visits.map {|v| v.inspections.count + 1}
              - csv_row_span    = visits_row_span.sum
              %td{:rowspan => (csv_row_span + 1), :data => {:csv => csv.csv_file_name} }
                = link_to csv.csv_file_name, csv.csv.url
              %td{:rowspan => (csv_row_span + 1), :data => {:location => csv.location.address} }
                = link_to csv.location.address, dashboard_locations_path
              %td{:rowspan => (csv_row_span + 1), :data => {:user => csv.user.username} }
                = csv.user.username

              - if csv.visits.length == 0
                %td
                %td
              - else
                - visits.each_with_index do |visit, index|
                  - row_span = visits_row_span[index]
                  %tr{:data => {"csv_id" => csv.id}}
                    %td{:rowspan => row_span, :data => {:visit => format_csv_timestamp(visit.visited_at)}}
                      = format_csv_timestamp(visit.visited_at)
                    %td{:rowspan => row_span}
                      = visit.health_report.to_i if visit.health_report.present?

                    - visit.inspections.includes(:report).order("id ASC").each do |inspection|
                      %tr{:data => {"csv_id" => csv.id}}
                        - report = inspection.report
                        %td
                          - site = report.breeding_site
                          = site.code if report.present? && site.present?
                        %td
                          = display_as_icon(report.protected) if report.present?
                        %td
                          = display_as_icon(report.larvae) if report.present?
                        %td
                          = display_as_icon(report.pupae) if report.present?
                        %td
                          = display_as_icon(report.chemically_treated) if report.present?



- content_for :scripts do
  :javascript
    $(document).ready(function () {
      $('#search-filter').keyup(function () {
        var rex = new RegExp($(this).val(), 'i');
        $('.statistics-table tbody tr').hide();

        var matchingCSVID = [];
        $('.statistics-table tbody tr').each(function() {
          var columns = $(this).find("td");

          // Iterate over all columns, matching the data attributes against the
          // regular expression.
          for (var i = 0; i < columns.length; i++)
          {
            var column = $(columns[i]);
            if ( rex.test(column.data("csv")) || rex.test(column.data("location")) || rex.test(column.data("user")) || rex.test(column.data("visit")) )
              matchingCSVID.push( $(this).data("csvId") )
          }
        })

        // Iterate over all rows that match the CSV ID and display them.
        $(".statistics-table tbody tr").filter(function() {
          return matchingCSVID.indexOf($(this).data("csvId")) != -1
        }).show();
      })
    });
