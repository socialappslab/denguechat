-# TODO @awdorsett - on error return to appropriate tab
-# TODO @awdorsett - before making ajax call look to see if location already exists, need to either pass locations to view or call server first

- content_for :head do
  %meta{:property => "og:url",         :content => neighborhood_reports_url(@neighborhood)}
  %meta{:property => "og:title",       :content => "Dengue Torpedo"}
  %meta{:property => "og:description", :content => I18n.t("facebook.description")}

#fb-root
:javascript
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/#{@facebook_locale}/all.js#xfbml=1&appId=1423593507909037&version=v2.0";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

:javascript
  !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");


= render :partial => "shared/flashes"

.row
  .span12.offset1
    .row
      .span5
        %h1
          = I18n.t("reports_feed.title", :name => @neighborhood.name)
      .span4
        %div{:style => "margin-top: 7px;"}
          = render :partial => "shared/social_media_buttons", :locals => {:twitter_content => I18n.t("facebook.description")}

  %br
  .span#report_buttons{:style => "font-size:20px;"}

.row
  .row.span10.offset1
    #report_buttons
      = link_to I18n.t("common_terms.all"), nil, :id => 'all_reports_button', :class=>'bttn reports_feed_button',
        :onclick => 'filter_reports(event,"all")'
      = link_to I18n.t("common_terms.open_reports"), nil, :id => 'open_reports_button', :class=>'bttn reports_open_button',
        :onclick => 'filter_reports(event,"open")'
      = link_to I18n.t("common_terms.eliminated_reports"), nil, :id => 'eliminated_reports_button', :class=>'bttn reports_resolved_button',
        :onclick => 'filter_reports(event,"eliminated")'

      - if @current_user
        = link_to I18n.t("common_terms.create_a_report"), nil, :id =>'make_report_button', :class => 'bttn', :onclick => 'display_new_report(event);'


  .row
    #report_display.span9.offset1
      -# TODO @awdorsett - all reports sorted by most recent?
      -# all reports
      #reports
        - @reports.each do |report|
          - if report.sms_incomplete?
            = render :partial => "reports/sms.html.haml", :object => report, as: 'report'
          - elsif report.is_open?
            = render :partial => "reports/open.html.haml", :object => report, as: 'report'
          - elsif report.is_eliminated?
            = render :partial => "reports/resolved.html.haml", :object => report, as: 'report'

      #new_report
        = render :partial => 'make_report_form'
    - if @neighborhood.name == "Maré"
      = render :partial => "reports/map"
    - else
      = render :partial => "reports/osm_map"


/------------------------------------------------------------------------------
/ ArcGIS map
/-----------
- if @neighborhood.name == "Maré"
  %link{rel: "stylesheet", href: "http://js.arcgis.com/3.6/js/esri/css/esri.css"}
  %script{src: "http://js.arcgis.com/3.6/init.js"}

  = render :partial => "reports/esri_map_js"
- else
  = javascript_include_tag "openstreetmap/OpenLayers"
  = javascript_include_tag "openstreetmap/proj4js-compressed"
  -# = render :partial => "reports/osm_map_js"

  :javascript
    // Declare different reports and their counts.
    // var open_markers       = #{@open_locations.to_json(:only => [:latitude, :longitude])}
    // console.log(open_markers)
    // var eliminated_markers = #{@eliminated_locations.to_json(:only => [:latitude, :longitude])}


    var size         = new OpenLayers.Size(64,64);
    var offset       = new OpenLayers.Pixel(15,15);
    var greyMarker   = new OpenLayers.Icon("/assets/markers/grey_marker.png", size, offset);
    var orangeMarker = new OpenLayers.Icon("/assets/markers/orange_marker.png", size, offset);
    var map, fromProjection, toProjection, markersLayer; //filled in later in the init method


    // Declare different reports and their counts.
    // var open_markers       = [{"latitude":680076.589943705,"longitude":7472195.75002062},{"latitude":680266.295950687,"longitude":7471747.54590176},{"latitude":null,"longitude":null},{"latitude":680136.126249498,"longitude":7472180.49977604},{"latitude":680438.592084289,"longitude":7471591.68855667},{"latitude":null,"longitude":null},{"latitude":680108.133417463,"longitude":7471539.19692729},{"latitude":680554.467877344,"longitude":7471694.63723277},{"latitude":680640.030212599,"longitude":7469459.90966016},{"latitude":680615.149921423,"longitude":7471308.69006072},{"latitude":680615.149921423,"longitude":7471308.69006072},{"latitude":649376.44687463,"longitude":7466007.38511691},{"latitude":680640.030212599,"longitude":7469459.90966016},{"latitude":680615.149921423,"longitude":7471308.69006072},{"latitude":649376.44687463,"longitude":7466007.38511691},{"latitude":680187.463811618,"longitude":7471828.27773749},{"latitude":680524.886695228,"longitude":7472123.62055022},{"latitude":680368.454934851,"longitude":7471325.96790595},{"latitude":680381.328488594,"longitude":7471666.84702602},{"latitude":680166.653151724,"longitude":7472173.01372173},{"latitude":680259.700743438,"longitude":7471660.01585756},{"latitude":680263.643753164,"longitude":7471735.49323853},{"latitude":680420.339797968,"longitude":7471697.85655889},{"latitude":680232.956122846,"longitude":7471618.92631448},{"latitude":680381.749919285,"longitude":7471681.89328903},{"latitude":680270.004762472,"longitude":7471540.24875555},{"latitude":680364.119871703,"longitude":7471677.81955198},{"latitude":680409.288615454,"longitude":7471625.89279749},{"latitude":680273.585106924,"longitude":7471682.34711666},{"latitude":680006.721098777,"longitude":7471965.07382638},{"latitude":680311.194879195,"longitude":7469799.22640378},{"latitude":680174.301979961,"longitude":7472178.11379289},{"latitude":680363.325877906,"longitude":7471375.9223351},{"latitude":680214.114281982,"longitude":7471735.62092319},{"latitude":680138.379637579,"longitude":7471676.62240998},{"latitude":680069.318721186,"longitude":7471870.32196603},{"latitude":680554.998524021,"longitude":7471683.78450986},{"latitude":680389.172694819,"longitude":7471620.55595628},{"latitude":680438.592084289,"longitude":7471591.68855667},{"latitude":680528.207053164,"longitude":7471704.09216844},{"latitude":680013.940517328,"longitude":7471958.76164081},{"latitude":680011.160094995,"longitude":7471625.81004978},{"latitude":680364.650251991,"longitude":7471350.82393932},{"latitude":680351.35707284,"longitude":7471290.54942897},{"latitude":680471.684933169,"longitude":7471706.45460576},{"latitude":680188.621394713,"longitude":7471688.57994012},{"latitude":680005.10430685,"longitude":7471651.62758843},{"latitude":680275.838495006,"longitude":7471219.71078641},{"latitude":680117.303428781,"longitude":7471848.30142692},{"latitude":680231.155721273,"longitude":7471327.26017706},{"latitude":680005.10430685,"longitude":7471651.62758843},{"latitude":680580.67481103,"longitude":7471449.58277414},{"latitude":680166.653151724,"longitude":7472173.01372173}]
    // var eliminated_markers = [{"latitude":665362.745024063,"longitude":7474606.48739226},{"latitude":680104.548246328,"longitude":7472050.94648395},{"latitude":680150.14099209,"longitude":7471631.59984186},{"latitude":680218.57489931,"longitude":7471251.92155899}]
    var open_markers       = [{"latitude":679951.633992295,"longitude":7467035.31532869},{"latitude":680322.866630597,"longitude":7471654.98200661},{"latitude":680526.082154943,"longitude":7471241.1542872},{"latitude":680615.149921423,"longitude":7471308.69006072},{"latitude":680615.149921423,"longitude":7471308.69006072},{"latitude":680008.032596832,"longitude":7471956.60802198},{"latitude":680303.424342065,"longitude":7471600.83667657},{"latitude":680517.659561321,"longitude":7469423.16654554},{"latitude":680345.297342244,"longitude":7471265.87294889},{"latitude":680295.456740526,"longitude":7471833.0079215},{"latitude":680266.295950687,"longitude":7471747.54590176},{"latitude":null,"longitude":null},{"latitude":680136.126249498,"longitude":7472180.49977604},{"latitude":680438.592084289,"longitude":7471591.68855667},{"latitude":null,"longitude":null},{"latitude":680554.467877344,"longitude":7471694.63723277},{"latitude":680640.030212599,"longitude":7469459.90966016},{"latitude":680615.149921423,"longitude":7471308.69006072},{"latitude":680615.149921423,"longitude":7471308.69006072},{"latitude":680517.659561321,"longitude":7469423.16654554},{"latitude":680640.030212599,"longitude":7469459.90966016},{"latitude":680615.149921423,"longitude":7471308.69006072},{"latitude":680517.659561321,"longitude":7469423.16654554},{"latitude":680187.463811618,"longitude":7471828.27773749},{"latitude":680524.886695228,"longitude":7472123.62055022},{"latitude":680368.454934851,"longitude":7471325.96790595},{"latitude":680381.328488594,"longitude":7471666.84702602},{"latitude":680166.653151724,"longitude":7472173.01372173},{"latitude":680259.700743438,"longitude":7471660.01585756},{"latitude":680263.643753164,"longitude":7471735.49323853},{"latitude":680420.339797968,"longitude":7471697.85655889},{"latitude":680232.956122846,"longitude":7471618.92631448},{"latitude":680381.749919285,"longitude":7471681.89328903},{"latitude":680270.004762472,"longitude":7471540.24875555},{"latitude":680364.119871703,"longitude":7471677.81955198},{"latitude":680409.288615454,"longitude":7471625.89279749},{"latitude":680273.585106924,"longitude":7471682.34711666},{"latitude":680006.721098777,"longitude":7471965.07382638},{"latitude":680311.194879195,"longitude":7469799.22640378},{"latitude":680174.301979961,"longitude":7472178.11379289},{"latitude":680363.325877906,"longitude":7471375.9223351},{"latitude":680214.114281982,"longitude":7471735.62092319},{"latitude":680138.379637579,"longitude":7471676.62240998},{"latitude":680069.318721186,"longitude":7471870.32196603},{"latitude":680554.998524021,"longitude":7471683.78450986},{"latitude":680389.172694819,"longitude":7471620.55595628},{"latitude":680438.592084289,"longitude":7471591.68855667},{"latitude":680528.207053164,"longitude":7471704.09216844},{"latitude":680013.940517328,"longitude":7471958.76164081},{"latitude":680011.160094995,"longitude":7471625.81004978},{"latitude":680364.650251991,"longitude":7471350.82393932},{"latitude":680351.35707284,"longitude":7471290.54942897},{"latitude":680471.684933169,"longitude":7471706.45460576},{"latitude":680188.621394713,"longitude":7471688.57994012},{"latitude":680005.10430685,"longitude":7471651.62758843},{"latitude":680275.838495006,"longitude":7471219.71078641},{"latitude":680117.303428781,"longitude":7471848.30142692},{"latitude":680231.155721273,"longitude":7471327.26017706},{"latitude":680005.10430685,"longitude":7471651.62758843},{"latitude":680580.67481103,"longitude":7471449.58277414},{"latitude":680166.653151724,"longitude":7472173.01372173}]
    var eliminated_markers = [{"latitude":680108.133417463,"longitude":7471539.19692729},{"latitude":680108.133417463,"longitude":7471539.19692729},{"latitude":665362.745024063,"longitude":7474606.48739226},{"latitude":680104.548246328,"longitude":7472050.94648395},{"latitude":680150.14099209,"longitude":7471631.59984186},{"latitude":680218.57489931,"longitude":7471251.92155899}]



    var coordinates = [];

    //-------------------------------------------------------------------------
    // Helpers
    //--------
    var updateOSMapWithLocationsAndMarker = function(locationsArray, marker)
    {
      for (var i = 0; i < locationsArray.length; i++) {
        loc = locationsArray[i];
        addLocationToOSMapWithMarker(loc, map, marker);
      }
    };

    var addLocationToOSMapWithMarker = function(loc, map, marker)
    {
      if (loc && loc.latitude > 0 && loc.longitude > 0)
      {
        var position = new OpenLayers.LonLat(loc.longitude, loc.latitude) //.transform( fromProjection, toProjection);
        markersLayer.addMarker(new OpenLayers.Marker(position, marker));
      }
    };

    OpenLayers.Control.Click = OpenLayers.Class(OpenLayers.Control, {
      defaultHandlerOptions: {
        'single': true,
        'double': false,
        'pixelTolerance': 0,
        'stopSingle': false,
        'stopDouble': false
      },

      initialize: function(options) {
        this.handlerOptions = OpenLayers.Util.extend(
        {}, this.defaultHandlerOptions);

        OpenLayers.Control.prototype.initialize.apply(
        this, arguments);

        this.handler = new OpenLayers.Handler.Click(
          this, {
            'click': this.trigger
          }, this.handlerOptions
        );
      },

      trigger: function(e) {
        //AppCivist Code
        var lonlat = map.getLonLatFromPixel(e.xy);
        console.log("You clicked near " + lonlat.lat + " N, " +
        + lonlat.lon + " E");
        if ( $("#make_report_button").hasClass("active") )
        {
          markerLayout.clearmarkers();

          var latitude  = lonlat.lat;
          var longitude = lonlat.lon;
          $("#new_report #report_location_attributes_latitude").val( latitude )
          $("#new_report #report_location_attributes_longitude").val( longitude )

          markersLayer.addMarker(new OpenLayers.Marker(lonlat,marker));
        }
      }

    });


    $(document).ready(function() {
      map = new OpenLayers.Map("OSMap");
      var mapnik         = new OpenLayers.Layer.OSM();

      // This is the Spatial Reference for EPSG of Mare. See
      // http://spatialreference.org/ref/epsg/sad69-2/
      // fromProjection = new OpenLayers.Projection("EPSG:4618");
      // toProjection   = new OpenLayers.Projection("EPSG:900913");
      fromProjection = new OpenLayers.Projection("EPSG:900913");
      toProjection   = new OpenLayers.Projection("EPSG:4326");
      //Maré
      //680291.2151545063, 7470751.29586681
      var lon			   = 7470751.29586681;
      var lat			   = 680291.2151545063;

      var position       = new OpenLayers.LonLat(lon,lat) //.transform( fromProjection, toProjection);
      console.log(position)
      var zoom           = 2;

      map.addLayer(mapnik);

      markersLayer = new OpenLayers.Layer.Markers( "Markers" );
      map.addLayer(markersLayer);

      map.setCenter(position, zoom );
      updateOSMapWithLocationsAndMarker(open_markers, orangeMarker)
      updateOSMapWithLocationsAndMarker(eliminated_markers, greyMarker)

      //setting the click handler, defined above
      var click = new OpenLayers.Control.Click();

      map.addControl(click);
      click.activate();
    });





.row{style: "height:600px;"}
