.span8
  - if report.is_invalid?
    %p{:style => "color:red;font-weight:bold;margin-top:10px; font-size: 15px;"}
      = I18n.t("common_terms.problem_with_report")

.span2.rp_before_photo
  = image_tag report.before_photo(:medium)

  - if report.after_photo.present?
    = image_tag report.after_photo(:medium)

.span6{style: "margin-top:9px;"}
  %h3.report_label
    = I18n.t("activerecord.attributes.report.report")
  .description #{report.report}

  - if report.elimination_type.present?
    .rp_report_people
      %h3{:style => "font-weight:bold;"} Tipo de foco:
      = report.elimination_type

      - if report.elimination_method.present?
        %h3{:style => "font-weight:bold;"} Método de eliminação:
        = report.elimination_method
        %br



  - if @current_user.present?
    .eliminate_prompt{:style => "margin-top:5px;"}
      - if report.sms_incomplete?
        = form_for(:eliminate, :url => {:controller => "reports", :neighborhood_id => @neighborhood.id, :action => "update", :html => {:autocomplete => "off", :multipart => false}}, :method=>:put) do |f|
          = hidden_field_tag 'report_id', report.id
          = link_to I18n.t("common_terms.complete_report"), edit_neighborhood_report_path(@neighborhood, report), class: "btn btn-info", style: "width:100%;background-color:#60BB50;background-image:-webkit-linear-gradient(top, #60BB50, #60BB50);border-color:#60BB50 #60BB50 #60BB50;margin-bottom:10px;"

      - elsif report.elimination_method.blank?
        = form_for([@neighborhood, report], :html => {:autocomplete => "off", :multipart => true}) do |f|
          %h3.report_label
            = "#{I18n.t("activerecord.models.elimination_method")}:"
          = f.select :elimination_method, options_for_select(elimination_selection(report.elimination_type).collect{|p| [p[:display],p[:name]]}, report.elimination_method), :prompt=> I18n.t("common_terms.select_elimination_method"), :id=>"method_selection", :class=>"elimination_methods"

          = f.fields_for :location, report.location || Location.new do |location_fields|
            = location_fields.hidden_field :latitude
            = location_fields.hidden_field :longitude

          - if report.after_photo_file_size
            .rp_report_people
              = "#{I18n.t("common_terms.uploaded_photo")}:"
              = link_to "#{report.after_photo_file_name}", report.after_photo.url, :class => "user"

          %h3.report_label
            = "#{I18n.t("common_terms.upload_photo_of_eliminated_report")}:"
          = f.file_field :after_photo, :disabled => (report.after_photo_file_size || report.expired?)

          %br
          .row
            .span2
              - should_disable = ( @current_user && (@current_user.role == "verificador" || @current_user.role == "visitante") || report.expired? || report.isVerified == "f" || report.sms_incomplete?)
              = submit_tag I18n.t("common_terms.submit"), :class=>'report_submission', :disabled => should_disable, :onclick=>"update_location_coordinates(#{report.location.to_json},event);"


  = render :partial => "reports/users_involved", :locals => {:report => report}
