%link{rel: "stylesheet", href: "http://js.arcgis.com/3.6/js/esri/css/esri.css"}
%script{src: "http://js.arcgis.com/3.6/init.js"}

:javascript
  // Declare different reports and their counts.
  var open_markers       = #{@open_locations.to_json(:only => [:latitude, :longitude])}
  var eliminated_markers = #{@eliminated_locations.to_json(:only => [:latitude, :longitude])}

  // Load the map.
  require(["esri/map", "esri/toolbars/draw", "esri/tasks/locator",
  "esri/layers/ArcGISTiledMapServiceLayer", "esri/layers/FeatureLayer",
  "esri/SpatialReference", "esri/geometry/Point", "esri/config",
  "esri/graphic", "esri/symbols/SimpleMarkerSymbol",
  "esri/symbols/SimpleLineSymbol", "esri/symbols/TextSymbol",
  "dojo/_base/Color", "esri/symbols/PictureMarkerSymbol",
  "esri/renderers/ClassBreaksRenderer", "esri/dijit/Popup",
  "esri/dijit/PopupTemplate", "dojo/dom-construct", "dojo/dom",
  "esri/InfoTemplate", "dojo/domReady!"], function(Map, Draw, Locator,
  Tiled, FeatureLayer, SpatialReference, Point, Geometry, Graphic,
  SimpleMarkerSymbol, SimpleLineSymbol, TextSymbol, Color, PictureMarkerSymbol,
  ClassBreaksRenderer, Popup, PopupTemplate, domConstruct, dom, InfoTemplate)
  {
    //-------------------------------------------------------------------------
    // Variable definitions
    //---------------------
    var popup             = new Popup({ highlight: false }, domConstruct.create("div"));
    var mapMareSpatialRef = new esri.SpatialReference({wkid: 29193});
    var customExtent      = new esri.geometry.Extent(667070.412263838,7456962.88258577,688175.480935968,7475960.60361382, mapMareSpatialRef);

    var tiled = new Tiled("http://pgeo2.rio.rj.gov.br/ArcGIS2/rest/services/Basico/mapa_basico_utm/MapServer");
    var point = new Point(680291.2151545063, 7470751.29586681, mapMareSpatialRef);
    var map = new Map("map", { center: point, zoom: 4, extent: customExtent, infoWindow:popup });

    var greyMarker   = new PictureMarkerSymbol("/assets/markers/grey_marker.png", 48, 48).setOffset(0, 0);
    var orangeMarker = new PictureMarkerSymbol("/assets/markers/orange_marker.png", 48, 48).setOffset(0, 0);

    var coordinates = [];

    // This top-level variable should be defined here since its existence is
    // checked in other functions.
    var blueGraphic;


    //-------------------------------------------------------------------------
    // Helpers
    //--------


    var updateMapWithLocationsAndMarker = function(locationsArray, marker)
    {
      for (var i = 0; i < locationsArray.length; i++) {

        loc = locationsArray[i];
        addLocationToMapWithMarker(loc, map, marker);
      }
    };

    var addLocationToMapWithMarker = function(loc, map, marker)
    {
      if (loc && loc.latitude > 0 && loc.longitude > 0)
      {
        var mapPoint   = new Point(loc.latitude, loc.longitude);
        var mapGraphic = new Graphic(mapPoint, marker);
        map.graphics.add(mapGraphic);
      }
    };

    //-------------------------------------------------------------------------
    // Create the map
    //---------------
    map.on("update-start", window.maps.showLoading );
    map.on("update-end",   window.maps.hideLoading );
    map.addLayer(tiled);

    map.on("load", function() {
      map.infoWindow.resize(300, 200);

      map.graphics.clear();

      updateMapWithLocationsAndMarker(open_markers, orangeMarker)
      updateMapWithLocationsAndMarker(eliminated_markers, greyMarker)
    })

    //-------------------------------------------------------------------------
    // Listeners
    //----------
    $("#go_to_mare").on("click", function() {
      var mapPoint = new Point(point.x, point.y, mapMareSpatialRef);
      map.centerAndZoom(mapPoint, 4);
    });

    // Report tab listeners
    //#- TODO @awdorsett - better way to handle new_report_tab?

    $('#make_report_button').on('click', function(){
      // clear map and enable adding a marker to map by clicking
      map.graphics.clear();
    });

    $('#all_reports_button').on('click', function(){
      map.graphics.clear();
      updateMapWithLocationsAndMarker(open_markers, orangeMarker)
      updateMapWithLocationsAndMarker(eliminated_markers, greyMarker)
    })

    $('#open_reports_button').on('click', function(){
      map.graphics.clear();
      updateMapWithLocationsAndMarker(open_markers, orangeMarker)
    })

    $('#eliminated_reports_button').on('click', function(){
      map.graphics.clear();
      updateMapWithLocationsAndMarker(eliminated_markers, greyMarker)
    })


    // Listener for location attribute updates
    $("#new_report_form #report_location_attributes_street_number").on("change", function()
    {
      window.maps.showLoading();

      var streetType   = $("#report_location_attributes_street_type").val();
      var streetName   = $("#report_location_attributes_street_name").val();
      var streetNumber = $("#report_location_attributes_street_number").val();

      $.ajax({
        url: "http://pgeo2.rio.rj.gov.br/ArcGIS2/rest/services/Geocode/DBO.Loc_composto/GeocodeServer/findAddressCandidates",
        type: "GET",
        dataType: "jsonp",
        data: {
          "f": "pjson",
          "Street": streetType + " " + streetName + " " + streetNumber
        },
        success: function(m) {
          var candidates = m.candidates;
          if (candidates.length == 0)
            window.maps.showError();
          else
          {
            map.graphics.clear();

            latitude     = candidates[0].location.x
            longitude    = candidates[0].location.y
            var mapPoint = new Point(latitude, longitude)

            var mapGraphic = new Graphic(mapPoint, orangeMarker);
            map.graphics.add(mapGraphic);
            map.centerAndZoom(mapPoint, 4);

            // Update the form so we can pass along the ESRI results.
            window.maps.updateHTMLFormLocation(latitude, longitude);
            window.maps.hideError();
          }
        },
        error: function()    { window.maps.showError(); },
        complete: function() { window.maps.hideLoading(); }
      });
    });

    // Listener for "Ache no Mapa". This allows users to click a button
    // and see the map update to the location.
    $(".mapa").on("click", function() {
      var latitude  = $(this).data("location").latitude;
      var longitude = $(this).data("location").longitude;

      if (latitude > 0 && longitude > 0)
      {
        var mapPoint  = new Point(latitude, longitude, mapMareSpatialRef)
        map.centerAndZoom(mapPoint, 6);
      }

      return false;
    });

    // Listener on the map. This allows users to click on the map, and update
    // the location attributes with the clicked point.
    map.on('click', function(e){
      if ( $("#new_report_form").is(":visible") ){
        map.graphics.clear();

        var latitude  = e.mapPoint.x;
        var longitude = e.mapPoint.y;
        window.maps.updateHTMLFormLocation(latitude, longitude);

        var mapPoint = new Point(latitude, longitude);
        var graphic  = new Graphic(mapPoint, orangeMarker);
        map.graphics.add(graphic);
      }
    });

  });
