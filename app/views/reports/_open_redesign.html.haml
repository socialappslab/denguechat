#controller{'ng-controller'=>'ReportListController'}
  #report_buttons.report_buttons_angular
    = link_to 'Todos', reports_path(:view => 'recent'), :class=>'bttn reports_feed_button ' + @reports_feed_button_active
    = link_to 'Em aberto', reports_path(:view => 'open'), :class=>'bttn reports_open_button ' + @reports_open_button_active
    = link_to 'Eliminados', reports_path(:view => 'eliminate'), :class=>'bttn reports_resolved_button ' + @reports_resolved_button_active
  = link_to "Marcar um foco", "#", :class => 'animated slideInDown bttn make_report_button report_new_report_btn ' + @make_report_button_active,'ng-click'=>'create_new_report()'
  #new_report
    .row
      #new_report_header
        %p Marcar
    .row
      .field_header
        %h4 1. Endereço do foco localizado:
    .row
      #address_field
        = text_field_tag "street_type",nil, :placeholder=>"Rua, Beco etc.", :id=>'street_type_field'
        = text_field_tag "street_name",nil, :placeholder=>"Nome", :id=>'street_name_field'
        = text_field_tag "street_number",nil, :placeholder=>"Número", :id =>'street_number_field'
        = text_field_tag "neighborhood","Maré",:disabled=>'true', :id=>'neighborhood'

    .row
      .field_header
        %h4 2. Descrição de localização:
    .row
      #description_field
        = text_area_tag "location_description", nil, :columns=>40, :placeholder=>"Descreva a localização do foco (max 100 caracteres) Ex: Foco no terreno ao lado; Foco na calçada em frente"

    .row
      .field_header
        %h4 3. Carregue a imagem do foco encontrado:
    .row
      #photo_field
        = file_field_tag 'before_photo'
    .row
      #elimination_type_field
        %h4 4.
        =select_tag :elimination_type, options_for_select(@elimination_types), :prompt=>'Selecione o tipo de foco', :class =>'report_drop_down'

    .row
      #map_field
        %h4 5.
        #map_button
          Marcar no mapa
      = button_tag "Enviar!", :id=>'submit_button'
    .row






  #reports
    #report_loop{'ng-repeat'=>'report in reports track by $index'}
      .rp_report.rp_open_report
        .row
          -#Header
          .report_header
            -#elimination status
            %p{'ng-class'=>"{'status_expired':report_expired(report)}"}Em aberto

            .right_half
              -#show timer if not expired, else show "Tempo expirado"
              %timer{'end-time'=>"time_left(report)",'ng-hide'=>'report_expired(report)'}
                %p Tempo restante
                .count_down {{hours + (days * 24)}}:{{minutes}}:{{seconds}}
              %p{'ng-show'=>'report_expired(report)'} Tempo expirado

              .admin_options
                = link_to (image_tag 'icons/reports icon/check.png'), problem_reports_path(:id => "{{report.info.id}}"), method: :post
                = link_to (image_tag 'icons/reports icon/x.png'), verify_reports_path(:id => "{{report.info.id}}"), method: :post

                -#Options for SMS submission - check on this

        -#body - top row
        .row.report_body_top
          .span6.report_address
            %h4 {{report.location.address}} Maré
            -#address or SMS info (? .report)
          .span2
            -#if .location.lat/long  place on map. See code below
            -#= link_to "Ache no mapa", "#", id: "mapa_#{open.id}", class: "mapa", data: { latitude: "#{open.location.latitude}", longitude: "#{open.location.longitude}"}, style: "margin-top:5px;float:right;border:1px solid gray;margin-right:-6px;padding:2px;"

        -#body - middle row
        .row.report_body_middle
          .span2.report_photos
            %img.report_before_photo{"ng-src"=>"{{report.before_url}}"}
            %img.report_after_photo{"ng-src"=>"{{report.before_url}}"}

          .span5{style: "margin-top:9px;"}
            -#elimination type
                -#Do we need a check for nil user?
                -#- if @current_user != nil
            .row
              .span7
                .eliminate_prompt{:style => "margin-top:5px;"}
                  = form_for(:eliminate, :url => {:controller => "reports", :action => "update", :html => {:autocomplete => "off", :multipart => false}}, :method=>:put) do |f|
                    -#report_id
                    = f.hidden_field :report_id, :value=>"{{report.info.id}}"
                    -#sms check
                    ELIM CHECK
                    -#elimination_type

                    = f.select :elimination_type, options_for_select(@elimination_types, "{{report.info.eliminiation_type}}"),{}, :prompt=>'Selecione o tipo de foco', :class =>'report_drop_down'
                    -#= f.select :phone_type, options_for_select([["Select One", ""], "Cell", "Work", "Office", "Home", "Other"]), :class => 'genForm_dropBox'
                      -#STYLING->= select_tag "elimination_type", options_for_select(@elimination_types, open.elimination_type), :prompt => "Selecione o tipo de foco", :style => "width:430px;", class: "elimination_type", :disabled => (open.elimination_type != nil or @current_user.role == "visitante" or open.sms_incomplete?)
                    -#elimination_method
                    = f.select :elimination_method, options_for_select(elimination_selection("{{report.info.elimination_type}}").collect{|p| [p[:display],p[:name]]}),{},{}
                    -#-STYLING->#=select_tag "elimination_method", options_for_select(elimination_selection(open.elimination_type).collect{|p| [p[:display],p[:name]]}), :prompt=>open.method_prompt, :id=>"method_selection", :class=>"elimination_methods"
                    -#= hidden_field_tag "selected_elimination_method"
                    -# Do we need this? Bootstrap picker
                      :javascript
                        $(".selectpicker").selectpicker();

                      -#After photo if one is available
                        -#  .rp_report_people
                            Foto carregada:
                            = link_to "#{open.after_photo_file_name}", open.after_photo.url, :class => "user"

                    -#- if elimination type selected allow for photo upload
                        %h3{:style => "font-size: 14px;"} Carregue uma foto do foco eliminado
                        = f.file_field :after_photo, :disabled => (open.after_photo_file_size or open.expired?)
                        %br

                    -#submit
                      = submit_tag "Enviar!", :style => "margin-left:5px;margin-top:5px;", :disabled => ((@current_user.role == "verificador" or @current_user.role == "visitante") or open.expired? or open.isVerified == "f" or open.sms_incomplete?)



                .row.rp_report_people{style: "width:430px;"}
                  Marcado por:
                  -#User and time
                  -#  =link_to open.reporter_name + " " + open.strftime_with(:created_at), user_path(open.reporter), :class => "user"
                  -#  %br

                    -#if verifed
                      Verificado por:
                      = link_to open.verifier_name + " " + open.strftime_with(:created_at), user_path(open.verifier), :class => "user"
                      %br
                    -#if denied verification
                      %p{:style => "color:red;font-weight:bold;margin-top:10px;"}
                        Problema no foco marcado. Entre em contato conosco.

          -#body - bottom row
          .row
            .rp_report_options
            -#Options, admin => delete, user (hasn't completed) => delete
              - if @current_user.admin? or (open.reporter == @current_user and open.elimination_type == nil)
                =link_to (image_tag 'icons/reports icon/delete2.png', :id=>'user_report_delete'), open, :confirm => "Você tem certeza?", :method => :delete, :style => "margin-right:5px;"

  #stuff