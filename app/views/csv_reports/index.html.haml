= render :partial => "shared/flashes"

.container

  .row{:style => "margin-bottom: 20px;"}
    .col-md-8.col-xs-8
      %h1.light-font
        Sus reportes cargados en CSV

    .col-md-4.col-xs-4
      .pull-right
        = link_to batch_csv_reports_path, :class => "btn btn-success" do
          %i.fa.fa-file
          = I18n.t("views.csv_reports.batch_upload")
        = link_to new_csv_report_path, :class => "btn btn-success" do
          %i.fa.fa-file
          = I18n.t("views.buttons.upload_csv")

  .row
    .col-md-12
      .panel.panel-default
        .panel-heading
          %h3.panel-title
            Reglas
        .panel-body
          %p.light-font
            Suba un nuevo CSV para que DengueChat lo analice.
            Si tiene un CSV con nuevas visitas, por favor súbale usando el mismo
            nombre del CSV original para asegurase que DengueChat tenga los datos completos.
  .row
    .col-md-12
      .panel.panel-default
        %table.table.table-bordered.table-hover.text-center.statistics-table
          %thead
            %th.text-center
              CSV
            %th.text-center
              = I18n.t("attributes.location_id")
            %th.text-center
              Fecha de carga
            %th.text-center
              = I18n.t("activerecord.attributes.visit.visited_at")
            %th.text-center
              Condición
          %tbody
            %tr
              %td.text-left.light-font
                Ayuda: Nombre su CSV con el nombre o código del lugar. Ejemplo: N001002003.xlsx
              %td
              %td
              %td
              %td
            - @csvs.each do |csv|
              - visits = csv.visits.order("visited_at ASC").map {|v| v.visited_at.strftime("%Y-%m-%d")}.uniq
              %tr{:data => {"csv_id" => csv.id}}
                %td{"style" => "width: 20%;"}
                  = link_to csv.csv_file_name, csv.csv.url
                %td{"style" => "width: 20%;"}
                  = csv.location.address if csv.location.present?
                %td{"style" => "width: 20%;"}
                  = csv.created_at.strftime("%Y-%m-%d %H:%M")
                %td{"style" => "width: 20%;"}
                  %ul.list-group
                    - visits.each do |visit_date|
                      %li.list-group-item
                        = visit_date
                %td{"style" => "width: 20%;"}
                  - if csv.csv_errors.present?
                    = I18n.t("views.csv_reports.parsing_errors") + ":"
                    %ul
                    - @csv.csv_errors.each do |error|
                      %li{"style" => "font-size: 18px; line-height: 40px;"}
                        = CsvError.humanized_errors[error.error_type]
                  - elsif csv.parsed_at.blank?
                    = I18n.t("views.csv_reports.parsing") + "..."

                  - if csv.csv_errors.blank?
                    = link_to I18n.t("common_terms.edit"), csv_report_path(csv), :class => "btn btn-warning btn-block"
                    - if csv.verified_at?
                      = I18n.t("views.csv_reports.verified_time_ago", :time => time_ago_in_words(csv.verified_at))
