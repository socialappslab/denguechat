= render :partial => "shared/flashes"

.container

  .row{:style => "margin-bottom: 20px;"}
    .col-md-8.col-xs-8
      %h1.light-font
        CSV

    .col-md-4.col-xs-4
      .pull-right
        = link_to batch_csv_reports_path, :class => "btn btn-success" do
          %i.fa.fa-file
          = I18n.t("views.csv_reports.batch_upload")
        = link_to new_csv_report_path, :class => "btn btn-success" do
          %i.fa.fa-file
          = I18n.t("views.buttons.upload_csv")

  - if @current_user && @current_user.coordinator?
    .row{"ng-controller" => "csv"}
      .col-md-12
        .panel.panel-default
          .panel-heading
            %h3.panel-title
              Opciones coordinador
              .pull-right
                %i.fa.fa-eye
                Visible sólo a los coordinadores
          .panel-body
            .row
              .col-md-6
                %p.form-label
                  = I18n.t("activerecord.models.user", :count => 2)

              .col-md-6
                %p.form-label
                  = I18n.t("activerecord.models.neighborhood", :count => 2)
                %ul.list-group
                  = link_to "Todas las comunidades", csv_reports_path, :class => "list-group-item #{params[:neighborhood_id].blank? ? 'active' : ''}"
                  - @current_user.city.neighborhoods.each do |neighborhood|
                    = link_to csv_reports_path(:neighborhood_id => neighborhood.id), :class => "list-group-item #{params[:neighborhood_id] == neighborhood.id.to_s ? 'active' : ''}" do
                      = neighborhood.name

  .row
    .col-md-12
      .panel.panel-default
        %table.table.table-bordered.table-hover.text-center.statistics-table
          %thead
            %th.text-center{:class => (params[:sort] == 'date' ? 'active' : '' )}
              Fecha de carga
              = link_to csv_reports_path( params.slice(:neighborhood_id, :user_id).merge(:sort => "date", :order => "asc") ) do
                %i.fa.fa-angle-up
              = link_to csv_reports_path( params.slice(:neighborhood_id, :user_id).merge(:sort => "date", :order => "desc") ) do
                %i.fa.fa-angle-down
            %th.text-center
              = I18n.t("activerecord.models.neighborhood", :count => 1)
            %th.text-center{:class => (params[:sort] == 'user' ? 'active' : '' )}
              = I18n.t("activerecord.models.user", :count => 1)
              = link_to csv_reports_path( params.slice(:neighborhood_id, :user_id).merge(:sort => "user", :order => "asc") ) do
                %i.fa.fa-angle-up
              = link_to csv_reports_path( params.slice(:neighborhood_id, :user_id).merge(:sort => "user", :order => "desc") ) do
                %i.fa.fa-angle-down
            %th.text-center
              CSV
            %th.text-center{:class => (params[:sort] == 'location' ? 'active' : '' )}
              = I18n.t("attributes.location_id")
              = link_to csv_reports_path( params.slice(:neighborhood_id, :user_id).merge(:sort => "location", :order => "asc") ) do
                %i.fa.fa-angle-up
              = link_to csv_reports_path( params.slice(:neighborhood_id, :user_id).merge(:sort => "location", :order => "desc") ) do
                %i.fa.fa-angle-down
            %th.text-center
              = I18n.t("activerecord.attributes.visit.visited_at")
            %th.text-center
              Condición
          %tbody
            - @csvs.each do |csv|
              - visits = csv.visits.order("visited_at ASC").map {|v| v.visited_at.strftime("%Y-%m-%d")}.uniq
              %tr{:data => {"csv_id" => csv.id}}
                %td{"style" => "width: 20%;"}
                  = csv.updated_at.strftime("%Y-%m-%d %H:%M")
                %td
                  = csv.neighborhood.name
                %td{"style" => "width: 15%;"}
                  = csv.user && "#{csv.user.username} (#{csv.user.name})"
                %td{"style" => "width: 15%;"}
                  = link_to csv.csv.url do
                    = csv.csv_file_name
                    %i.fa.fa-download
                %td{"style" => "width: 15%;"}
                  = csv.location.address if csv.location.present?
                %td{"style" => "width: 25%;"}
                  %ul.list-group
                    - visits.each do |visit_date|
                      %li.list-group-item
                        = visit_date
                %td{"style" => "width: 25%;"}
                  - if csv.csv_errors.present?
                    = I18n.t("views.csv_reports.parsing_errors") + ":"
                    %ul
                    - @csv.csv_errors.each do |error|
                      %li{"style" => "font-size: 18px; line-height: 40px;"}
                        = CsvError.humanized_errors[error.error_type]
                  - elsif csv.parsed_at.blank?
                    = I18n.t("views.csv_reports.parsing") + "..."

                  - if csv.csv_errors.blank?
                    = link_to I18n.t("common_terms.edit"), csv_report_path(csv), :class => "btn btn-warning btn-block"
                    - if csv.verified_at?
                      = I18n.t("views.csv_reports.verified_time_ago", :time => time_ago_in_words(csv.verified_at))
