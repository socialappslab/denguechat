= render :partial => "shared/flashes"
= render :partial => "shared/form_errors", :locals => {:item => @team}

.row
  .span12.offset3

    .row
      .span7{:style => "width: 380px;"}
        %h1{:style => "font-size: 40px;"}
          = I18n.t("activerecord.models.team", :count => 2)

      .span6{:style => "text-align: right;"}
        = link_to "+ " + I18n.t("views.teams.create"), nil, :class => "btn btn-success btn-large", :id => "create-new-team"

    .row{:style => "margin-top: 20px;"}
      .span3
        %h2
          = I18n.t("common_terms.order_by")
      .span4#order-teams
        %label.radio.inline
          %input{:type => "radio", :name => "team-order", :value => "points", :checked => params[:sort] != "name"}
          = I18n.t("activerecord.attributes.user.total_points", :count => 2)
        %label.radio.inline
          %input{:type => "radio", :name => "team-order", :value => "name", :checked => params[:sort] == "name"}
          = "A-Z"

    .row
      .span12
        - should_display_form = (flash[:show_new_team_form] == true || params[:form] == "true")
        = form_for @team, :html => { :id => "new-team-form", :class => "form-horizontal well", :style => "#{should_display_form == true ? '' : 'display: none;'}; margin-top: 20px;" } do |f|
          .control-group
            = f.label I18n.t("activerecord.attributes.team.name"), :class => "control-label", :style => "width: 200px; text-align: left;"
            .controls
              = f.text_field :name, :class => "form-control span6"
          .control-group
            = f.label I18n.t("activerecord.attributes.team.profile_photo"), :class => "control-label", :style => "width: 200px; text-align: left;"
            .controls
              = f.file_field :profile_photo, :class => "span6"
          .control-group
            .controls.span6{:style => "margin-left: 195px;"}
              = button_tag :type => "submit", :class => "btn btn-success btn-block submit-button" do
                %i.fa.fa-refresh.fa-spin{:style => "display:none;"}
                = I18n.t("views.buttons.create")



    %hr{:style => "border: 1px solid #e5e6e9; border-bottom: none;"}

    - if @team_rankings.blank?
      %h2{:style => "text-align: center;"}
        = I18n.t("views.teams.empty")
    - else
      - @team_rankings.each_with_index do |team_data, index|
        - team        = team_data[0]
        - team_points = team_data[1]
        .row{:style => "height: 100px;"}
          .span2
            %h1{:style => "font-size: 48px; color: #bdc3c7; line-height: 100px;"}
              = index + 1
          .span2
            = link_to team_path(team) do
              - if team.profile_photo_file_name.nil?
                = image_tag("teams/default.png", :class => "img-rounded", :style => "height: 100px; width: 100px;")
              - else
                = image_tag(team.profile_photo.url(:small), :class => "img-rounded", :style => "height: 100px; width: 100px;")

          .span5
            .row
              .span6
                %h1
                  = link_to team.name, team_path(team)
            .row
              .span4{:style => "display: table; height: 65px;"}
                %span{:style => "display: table-cell; vertical-align: bottom;"}
                  %span{:style => " font-size: 30px; color: #5cb85c; display: inline;"}
                    = team_points
                  = I18n.t("activerecord.attributes.user.total_points", :count => team_points)

          .span3
            %div{:style => "display: table; height: 100px; width: 100%; float: left;"}
              %div{:style => "display: table-cell; vertical-align: middle;"}
                - if team.team_memberships.map(&:user_id).include?(@current_user.id)
                  = link_to nil, :class => "btn btn-success btn-large disabled", :style => "width: 100%;" do
                    %i{:class => "fa fa-check"}
                    = I18n.t("views.teams.my_team")
                - else
                  = form_tag join_team_path(team), :method => "POST" do
                    = submit_tag "+ " + I18n.t("views.teams.join"), :class => "btn btn-info btn-large", :style => "float: right; width: 100%; white-space: normal;"

        %hr{:style => "border: 1px solid #e5e6e9; border-bottom: none;"}


-# NOTE: See comment below.
-# #progressBarModal.modal.hide.fade{:tabindex => "-1", :role => "dialog"}
-#   .modal-header
-#     %h3#progressBarLabel
-#       Loading...
-#   .modal-body
-#     %i.fa.fa-spinner.fa-spin{:style => "font-size: 64px;"}
-#

:javascript
  $(document).ready(function()
  {
    // Listener on new team button.
    $("#create-new-team").on("click", function(e)
    {
      e.preventDefault();
      $("#new-team-form").toggle()
    });

    // Listen for team ordering event.
    // TODO: Consider making radio buttons links themselves.
    $("#order-teams input[name='team-order']").on("click", function(e)
    {
      var uri = window.location.href.split("?")[0]
      window.location.href = uri + "?" + $.param({sort: $(e.currentTarget).val()})
    });

    // NOTE: As cool as this is, its implementation requires adding/rewriting
    // a lot of the existing functionality. Consider coming back to this.
    // $(".submit-button").on("click", function(e)
    // {
    //   e.preventDefault();
    //
    //   $(".messagesFromJSON .alert-danger").hide();
    //   $(".messagesFromJSON .alert-success").hide();
    //
    //   var ajaxRequest = $.ajax({"url": e.currentTarget.form.action, "method": e.currentTarget.form.method, "data": $(e.currentTarget.form).serialize(), "dataType": "json"})
    //   ajaxRequest.done(function(xhr, data, response)
    //   {
    //     $('#progressBarModal').modal("hide")
    //
    //     if (xhr.errors)
    //     {
    //       for (var prop in xhr.errors)
    //       {
    //         $(".messagesFromJSON .alert-danger ul").append("<li>" + xhr.errors[prop] + "</li>")
    //       }
    //
    //       $(".messagesFromJSON .alert-danger").show();
    //     }
    //     else
    //     {
    //       $(".messagesFromJSON .alert-success p").text(xhr.success)
    //       $(".messagesFromJSON .alert-success").show();
    //     }
    //
    //
    //
    //   })
    //
    // });

  })
