

.row
  .span15.offset1
    %h1
      - if @house.user && @house.user.role == User::Types::VERIFIER
        - if @house.user.gender == true
          #{@house.name} (verificador)
        - else
          #{@house.name} (verificadora)
      - elsif @house.user && @house.user.role == User::Types::COORDINATOR
        - if @house.user.gender == true
          Casa #{@house.name} (coordenador)
        - else
          Casa #{@house.name} - (coordenadora)
      - else
        Casa #{@house.name}
.row
  .span9.offset1
    %br
    .row

      .span4
        - if @house.profile_photo.nil?
          = image_tag "default_images/house_default_image.png", :id => 'house_photo'
        - else
          = image_tag @house.profile_photo.url(:large), :id => 'house_photo'
      .span5
        %br
        .row
          .span2
            #house_neighborhood.house_gray
              .row
                Comunidade
              .row
                #house_neighborhood_bg
                  = link_to @neighborhood.name, neighborhood_path(@neighborhood)
          .span2.offset1
            .house_gray
              .row{style: "margin-left:-40px;"}
                Pontos da casa
              .row
                #house_points_bg
                  #{ @house.points.to_s}
          .row
            #house_badges
            .span5


    .row
      .span9
        %h2 Moradores
        - for member in @house.members.slice(0, 30)
          #house_members.span1
            .row
              - if (member.profile_photo_file_name.nil?)
                = link_to image_tag("default_images/profile_default_image.png", width: 70, height: 70), user_path(member)
              - else
                = link_to image_tag(member.profile_photo.url(:small), :width => 70, :height => 70), user_path(member)
            .row
              = link_to member.first_name, user_path(member)

    .row
      .span10
        %h2 Vizinhos na #{@neighborhood.name}
        #houses_in_neighborhood
          - if @neighbors.count == 1
            %p Não tem nenhum vizinho usando Dengue Torpedo. Recrute alguem!
          - else
            %ul
            - for neighbor in @neighbors
              %li
                - if neighbor.profile_photo_file_name.nil?
                  = link_to image_tag("default_images/house_default_image.png"), neighborhood_house_path(@neighborhood, neighbor), title: "#{neighbor.name}"
                - else
                  = link_to image_tag(neighbor.profile_photo.url(:small), :width => 70, :height => 70), neighborhood_house_path(@neighborhood, neighbor), title: "#{neighbor.name}"

    %br
    .row{:style => "margin-top:13px;"}
      %h2.span15
        Blogs e focos marcados
    .row
      .span9
        - for post in @house.posts.sort{|a, b| b.created_at <=> a.created_at}
          = render :partial => "/posts/post", :locals => {:post => post}

  .span6
    .row{:style => "margin-top:-37px;"}
      %h2.span6 Focos marcados pela casa:
      #house_reports.span6
        - if @neighborhood.name == "Maré"
          .row
            .span6
              #map{style: "margin-left:5px;height: 500px;position:relative;"}
                = image_tag "loading.gif", id: "loading", style: "position:absolute;width:50px; height:50px;top:225px;left:195px;z-index:100"

        .row
          .span6
            #report_status_bar
              %ul
                %li
                  %a{:href => "#", :style => "color:black;", :id => "house_todos_report_button"}
                    #house_all_report_button.house_report_button.span1.active
                      .row
                        = @reports.count
                      .row Todos
                %li
                  %a{:href => "#", :id => "house_open_report_button"}
                    #house_open_report_button.house_report_button.span1
                      .row
                        = @open_house_reports.count
                      .row Em aberto
                %li
                  %a{:href => "#", :id => "house_resolved_report_button"}
                    #house_resolved_report_button.house_report_button.span1
                      .row
                        = @eliminated_house_reports.count
                      .row Eliminados

        .row
          #list_of_house_reports
            - for report in @reports
              .row
                - if report.open?
                  = render :partial => "/houses/open_report", :object => report
                - if report.eliminated?
                  = render :partial => "/houses/resolved_report", :object => report



/------------------------------------------------------------------------------
/ ArcGIS map
/-----------
- if @neighborhood.name == "Maré"
  %link{rel: "stylesheet", href: "https://js.arcgis.com/3.6/js/esri/css/esri.css"}
  %script{src: "https://js.arcgis.com/3.6/init.js"}

:javascript
  require(["esri/map", "esri/toolbars/draw", "esri/tasks/locator",
  "esri/layers/ArcGISTiledMapServiceLayer", "esri/layers/FeatureLayer",
  "esri/SpatialReference", "esri/geometry/Point", "esri/config",
  "esri/graphic", "esri/symbols/SimpleMarkerSymbol",
  "esri/symbols/SimpleLineSymbol", "esri/symbols/TextSymbol",
  "dojo/_base/Color", "esri/symbols/PictureMarkerSymbol",
  "esri/renderers/ClassBreaksRenderer", "esri/dijit/Popup",
  "esri/dijit/PopupTemplate", "dojo/dom-construct", "dojo/dom",
  "esri/InfoTemplate", "dojo/domReady!"], function(Map, Draw, Locator,
  Tiled, FeatureLayer, SpatialReference, Point, Geometry, Graphic,
  SimpleMarkerSymbol, SimpleLineSymbol, TextSymbol, Color, PictureMarkerSymbol,
  ClassBreaksRenderer, Popup, PopupTemplate, domConstruct, dom, InfoTemplate)
  {
    var customExtent = new esri.geometry.Extent(667070.412263838,7456962.88258577,688175.480935968,7475960.60361382, new esri.SpatialReference({"wkid":29193}));

    var mapMareSpatialRef = new esri.SpatialReference({wkid: 29193});

    var point = new Point(680291.2151545063, 7471001.29586681, mapMareSpatialRef);
    var popup = new Popup({ highlight: false }, domConstruct.create("div"));
    var tiled = new Tiled("https://pgeo2.rio.rj.gov.br/ArcGIS2/rest/services/Basico/mapa_basico_utm/MapServer");
    var map   = new Map("map", { center: point, zoom: 4, extent: customExtent, infoWindow:popup });

    var greyMarker   = new PictureMarkerSymbol("/assets/markers/grey_marker.png", 64, 64).setOffset(15, 15);
    var orangeMarker = new PictureMarkerSymbol("/assets/markers/orange_marker.png", 64, 64).setOffset(15, 15);

    var open_markers       = #{@open_markers.to_json};
    var eliminated_markers = #{@eliminated_markers.to_json};


    //-------------------------------------------------------------------------
    // Helpers
    //--------
    var updateMapWithLocationsAndMarker = function(locationsArray, marker)
    {
      for (var i = 0; i < locationsArray.length; i++) {
        loc = locationsArray[i];
        addLocationToMapWithMarker(loc, map, marker);
      }
    };

    var addLocationToMapWithMarker = function(loc, map, marker)
    {
      if (loc && loc.latitude > 0 && loc.longitude > 0)
      {
        var mapPoint   = new Point(loc.latitude, loc.longitude);
        var mapGraphic = new Graphic(mapPoint, marker);
        map.graphics.add(mapGraphic);
      }
    };

    //-------------------------------------------------------------------------
    // Create a map
    //-------------
    map.addLayer(tiled);
    map.on("update-start", window.maps.showLoading);
    map.on("update-end", window.maps.hideLoading);
    map.on("load", function() {
      map.infoWindow.resize(300, 200);

      map.graphics.clear();
      updateMapWithLocationsAndMarker(open_markers, orangeMarker)
      updateMapWithLocationsAndMarker(eliminated_markers, greyMarker)
    });

    //-------------------------------------------------------------------------
    // Listeners
    //----------

    $('#house_todos_report_button').on('click', function(){
      map.graphics.clear();
      updateMapWithLocationsAndMarker(open_markers, orangeMarker)
      updateMapWithLocationsAndMarker(eliminated_markers, greyMarker)
    })

    $('#house_open_report_button').on('click', function(){
      map.graphics.clear();
      updateMapWithLocationsAndMarker(open_markers, orangeMarker)
    })

    $('#house_resolved_report_button').on('click', function(){
      map.graphics.clear();
      updateMapWithLocationsAndMarker(eliminated_markers, greyMarker)
    })
  });
