

%h3{:style => "font-size: 24px; margin-top: 40px; text-align: center;"}
  = I18n.t('views.statistics.chart.title')
#chart{:style => "width: 100%; height: 500px;"}


#potential-chart{:style => "width: 100%; height: 500px;"}

#negative-chart{:style => "width: 100%; height: 500px;"}



.chart-legend{:style => "margin-bottom: 40px;"}
  %div{:style => "width: 10px; height: 10px; background-color: #2ecc71; display: inline-block;"}
  = I18n.t('views.statistics.chart.percent_of_green_sites')
  %br
  %div{:style => "width: 10px; height: 10px; background-color: #95a5a6; display: inline-block;"}
  = I18n.t('views.statistics.chart.percent_of_negative_sites')
  %br
  %div{:style => "width: 10px; height: 10px; background-color: #f1c40f; display: inline-block;"}
  = I18n.t('views.statistics.chart.percent_of_potential_sites')
  %br
  %div{:style => "width: 10px; height: 10px; background-color: #e74c3c; display: inline-block;"}
  = I18n.t('views.statistics.chart.percent_of_positive_sites')


%script{:src => "https://www.google.com/jsapi?autoload={'modules':[{'name':'visualization','version':'1','packages':['corechart']}]}", :type => "text/javascript"}


:javascript
  google.load('visualization', '1', {packages: ['corechart']});
  google.setOnLoadCallback(drawChart);
  google.setOnLoadCallback(drawPotentialChart);
  google.setOnLoadCallback(drawNegativeChart);

  var statistics = #{@chart_statistics.to_json};
  statistics.unshift([
    "#{I18n.t('views.statistics.chart.time')}",
    "#{I18n.t('views.statistics.chart.percent_of_positive_sites')}",
    "#{I18n.t('views.statistics.chart.percent_of_potential_sites')}",
    "#{I18n.t('views.statistics.chart.percent_of_negative_sites')}",
    "#{I18n.t('views.statistics.chart.percent_of_green_sites')}"
  ])

  var options = {
    width: $("#chart").width(),
    chartArea: {
      left: 75,
      right: 75,
      top: 50,
      width: "80%",
      height:"75%"
    },
    hAxis: {
      title: "#{I18n.t('views.statistics.chart.time')}",
      titleTextStyle: {
        italic: false,
        fontSize: "20"
      }
    },
    vAxis: {
      title: "#{I18n.t('common_terms.percentage')}",
      // viewWindow: {
      //   max: 110,
      //   min: 0
      // },
      format: "#\'%\'",
      titleTextStyle: {
        italic: false,
        fontSize: "20"
      }
    },
    backgroundColor: '#eff0f3',
    colors: ["#e74c3c", "#f1c40f", "#95a5a6", "#2ecc71"],
    legend: {
      position: "none",
      alignment: "start",
      textStyle: {
        fontSize: "15"
      }
    }
  };



  function drawChart() {
    var positiveStatistics = [];
    var min = statistics[1][1];
    var max = statistics[1][1];
    for (var i = 0; i < statistics.length; i++) {
      positiveStatistics.push( [ statistics[i][0], statistics[i][1] ] )
      // if (statistics[i][1] < min)
      //   min = statistics[i][1]
      // if (statistics[i][1] > max)
      //   max = statistics[i][1]
    }


    // data.addRows(statistics);
    var data = new google.visualization.arrayToDataTable(positiveStatistics);
    options.hAxis.showTextEvery = parseInt(data.getNumberOfRows() / 4);
    options.colors = ["#e74c3c"];

    var formatter = new google.visualization.NumberFormat({suffix: "%", fractionDigits: 0});
    formatter.format(data, 1);


    var chart = new google.visualization.LineChart(document.getElementById("chart"));
    chart.draw(data, options);
  }


  // Draw potential chart
  function drawPotentialChart() {
    var potentialStatistics = []
    for (var i = 0; i < statistics.length; i++) {
      potentialStatistics.push( [ statistics[i][0], statistics[i][2] ] )
    }

    // data.addRows(statistics);
    var data = new google.visualization.arrayToDataTable(potentialStatistics);
    options.hAxis.showTextEvery = parseInt(data.getNumberOfRows() / 4);
    options.colors = ["#f1c40f"];

    var formatter = new google.visualization.NumberFormat({suffix: "%", fractionDigits: 0});
    formatter.format(data, 1);

    var chart = new google.visualization.LineChart(document.getElementById("potential-chart"));
    chart.draw(data, options);
  }

  // Draw negative chart
  function drawNegativeChart() {
    var negativeStatistics = []
    for (var i = 0; i < statistics.length; i++) {
      negativeStatistics.push( [ statistics[i][0], statistics[i][3] ] )
    }

    // data.addRows(statistics);
    var data = new google.visualization.arrayToDataTable(negativeStatistics);
    options.hAxis.showTextEvery = parseInt(data.getNumberOfRows() / 4);
    options.colors = ["#95a5a6"];

    var formatter = new google.visualization.NumberFormat({suffix: "%", fractionDigits: 0});
    formatter.format(data, 1);

    var chart = new google.visualization.LineChart(document.getElementById("negative-chart"));
    chart.draw(data, options);
  }
