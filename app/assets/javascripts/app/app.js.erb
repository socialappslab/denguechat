(function () {
  angular.module('denguechat.directives', ["ui-notification"]);
  angular.module('denguechat.controllers', []);
  angular.module('denguechat.services', ["ngResource"]);

    angular.module('denguechatApp', [
    "ngSanitize",
    'denguechat.directives',
    'denguechat.controllers',
    "denguechat.services",
    'ngMessages',
    'ui.select',
    'templates',

    // 'ngMaterial',
    'ui-notification'
  ]).run(["$rootScope", "Notification", function($rootScope, Notification) {

    $rootScope.$on(denguechat.success, function(event, response) {
      console.log(response)
      Notification.success({message: "¡Éxito!", positionY: 'top', positionX: 'right'});
      if (response.reload)
        window.location.reload()
      if (response.redirect_path)
        window.location.href = response.redirect_path
    })

    $rootScope.$on(denguechat.error, function(event, response) {

      if (response.status == 0 || response.status == 500)
        message = "Algo salió mal en nuestro extremo. Inténtelo de nuevo o póngase en contacto con dmitriskj@gmail.com"
      else if (response.responseJSON)
        message = response.responseJSON.error
      else if (response.data)
        message = response.data.message
      else
        message = response.data.error
      Notification.error({message: message, positionY: 'top', positionX: 'right'});
    })


  }]).filter('propsFilter', function() {
    return function(items, props) {
      var out = [];

      if (angular.isArray(items)) {
        var keys = Object.keys(props);

        items.forEach(function(item) {
          var itemMatches = false;

          for (var i = 0; i < keys.length; i++) {
            var prop = keys[i];
            var text = props[prop].toLowerCase();
            // console.log("item = " + item + " prop = " + prop)
            if (item[prop].toString().toLowerCase().indexOf(text) !== -1) {
              itemMatches = true;
              break;
            }
          }

          if (itemMatches) {
            out.push(item);
          }
        });
      } else {
        // Let the output be the input untouched
        out = items;
      }

      return out;
    };
  });

}());

// We turn automatic bootstrapping via %html{"ng-app" => "cloviFlowApp"}
// so we can have AngularJS play nicely with Turbolinks.
// See: http://stackoverflow.com/questions/14797935/using-angularjs-with-turbolinks
$(document).on('ready page:load', function()
{
  angular.bootstrap(document.body, ['denguechatApp'])
});


// The only difference between our linky and the "linky" is that we're
// not sanitizing the HTML in order to allow for @dmitri mentions.
angular.module('ngSanitize').filter('denguechatLinky', [function() {
  var LINKY_URL_REGEXP = /((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,
      MAILTO_REGEXP = /^mailto:/i;

  return function(text, target) {
    if (!text) return text;
    var match;
    var raw = text;
    var html = [];
    var url;
    var i;
    while ((match = raw.match(LINKY_URL_REGEXP))) {
      // We can not end in these as they are sometimes found at the end of the sentence
      url = match[0];
      // if we did not match ftp/http/www/mailto then assume mailto
      if (!match[2] && !match[4]) {
        url = (match[3] ? 'http://' : 'mailto:') + url;
      }
      i = match.index;
      addText(raw.substr(0, i));
      addLink(url, match[0].replace(MAILTO_REGEXP, ''));
      raw = raw.substring(i + match[0].length);
    }
    addText(raw);
    return html.join('');

    function addText(text) {
      if (!text) {
        return;
      }
      html.push(text);
    }

    function addLink(url, text) {
      html.push('<a ');
      if (angular.isDefined(target)) {
        html.push('target="',
                  target,
                  '" ');
      }
      html.push('href="',
                url.replace(/"/g, '&quot;'),
                '">');
      addText(text);
      html.push('</a>');
    }
  };
}]);
